
include mixins/icon.pug
include mixins/responsive-image.pug

//- .hotspot-detail
//-   .hotspot-detail-background
//-   .hotspot-detail-content-wrap
//-     .hotspot-detail-content
//-       p.lead-in Have you looked at the website and wondered how it works? What building block is it made of? Is it complex or is it much simplier than it looks?
//-       p Back in the days, in 2004 when I just got my modem internet, and a student of my father asked him whether he knows anyone who can build a photography internet shop, my dad just said my son can do that, nor I did knew anything about website development, nor my first customer knew that I am just 14 yrs old boy going in school. In anyway, we were matched. And I had my first job I wasn't really knowing anything about. Well I did first experiments with Macromedia Flash 6.0, which was more or less completely interactive editor, which I had fun working with, but the world of PHP (back then common programming web language), HTML was a completely new world to me.
//-       p Why such outro you ask, "I just want to know how this website was built". Well, the internet was a different place back then, it was much more open. You could look into source code of any website, and JavaScript was not compiled, not minified, it was simple, some first frameworks just appeared, but they were not commonly used. I remember, I tried to look up to the best (at that time), Yahoo back then with their innovative UI at my.yahoo.com, where I could download the source code and study it bit by bit to understand drag &amp; drop, CSS techniques, etc.
//-       p So not to overwhelm you, here is an overview of the contents:


.article.article-making-of.cmp
  section.article__section.fold1
    .article__block
      h1
        .line Reach #[span.highlight the best performance]
        .line marks on highly interactive
        .line websites
      .lead-in.
        As you might have already heard, the performance &amp; user experience benchmarks like Lighthouse, or Web-Vitals, become increasingly important, not only for your customers, but also for search engines like Google.
  section.article__section.fold2
    .article__block
      .article__block_content
        p Still, as web-developers or web-agencies, we tend to show off from time to time, and put some pages on limit, and practically use technology we've got for the better of users. So how can we find, this perfect balance, and can implement some nice UX ideas, without hurting website performance, nor Google Page Ranking?
        p In this show overview we'll provide few concepts, which we have used in optimizing our on website for performance (still one of the features we value the most).
  section.article__section.bold-fold
    .article__block
      h1 Loading...
  //- section.article__section
  //-   .article__block
  //-     .columns
  //-       p Now the hard bits, how could we achieve the best possible metrics of the website, and still keeping your website impressive & interactive? Here we provide a short overview, of all important metrics &amp; key rules how to get the best scores (without cheating).
  //-       p Now the hard bits, how could we achieve the best possible metrics of the website, and still keeping your website impressive & interactive? Here we provide a short overview, of all important metrics &amp; key rules how to get the best scores (without cheating).

  //-     .hotspot-image
  //-       video(src=staticPath + 'video/play/article/making-of/server.mp4', controls, autoplay)
  //-       .hotspot.cmp(data-position="29,59",data-name="cdn-network")
  //-         .title-wrap
  //-           .title Use CDN Network
  //-         .hotspot-content
  //-           .graphic
  //-             img(src=scriptPath + 'svg/play/article/making-of/cdn.svg',width=115,height=115)
  //- section.article__section
  //-   .article__block
  //-     h1
  //-       .line How to reach best
  //-       .line performance on highly
  //-       .line interactive websites
  //-     .lead-in.
  //-       As you have probably already heard,
  //-       since May 2021
  //-       #[a(href='https://developers.google.com/search/blog/2020/11/timing-for-page-experience') Google]
  //-       will priotize pages matching their new Web Vitals guidelines.
  //-       So is it really necessary, and how we can optimize the pages for that?

  //- p.lead-in Have you looked at the website and wondered how it works? What building block is it made of? Is it complex or is it much simplier than it looks?
  //- p Back in the days, in 2004 when I just got my modem internet, and a student of my father asked him whether he knows anyone who can build a photography internet shop, my dad just said my son can do that, nor I did knew anything about website development, nor my first customer knew that I am just 14 yrs old boy going in school. In anyway, we were matched. And I had my first job I wasn't really knowing anything about. Well I did first experiments with Macromedia Flash 6.0, which was more or less completely interactive editor, which I had fun working with, but the world of PHP (back then common programming web language), HTML was a completely new world to me.
  //- p Why such outro you ask, "I just want to know how this website was built". Well, the internet was a different place back then, it was much more open. You could look into source code of any website, and JavaScript was not compiled, not minified, it was simple, some first frameworks just appeared, but they were not commonly used. I remember, I tried to look up to the best (at that time), Yahoo back then with their innovative UI at my.yahoo.com, where I could download the source code and study it bit by bit to understand drag &amp; drop, CSS techniques, etc.
  //- p So not to overwhelm you, here is an overview of the contents:
  //- ul
  //-   li What is important in the website?
  //-   li What makes great UX in the website?
  //-   li Architecture of the modern Website 2021
  //-     ul
  //-       li Optimizing for Web Vitals with ExpressJS
  //-       li Stylesheets
  //-       li Server &amp; Hosting
  //-       li JavaScript Framework or No-Framework
  //-       li JavaScript Compilation &amp; Delivery
  //-       li Compressing and delivering images Images &amp; Videos
  //-   li Challenges
  //-   li Scroll behaviour Trackpad
  //-   li Appearing Images / Aspect Ratio / Layout Shift
  //-   li Video Seek is quite slow
  //-   li Using Google App Engine to host and deploy the website
  //-   li History Back, going beyond standard frameworks, and really using the state
  //-   li Using CSS Vars
  //-   li Functional HS Classes vs Compression
  //- .article__block__content
          //- .browser
          //-   .top
          //-     img(src=scriptPath + "video/play/article/performance/browser-top.png")
          //-   video(src=scriptPath + "video/play/article/performance/screencast.mp4",loop, muted, crossorigin, playsinline, autoplay)